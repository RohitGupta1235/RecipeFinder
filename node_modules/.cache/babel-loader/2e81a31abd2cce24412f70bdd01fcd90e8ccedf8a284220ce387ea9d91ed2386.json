{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\RecipeProject\\\\recipie-finder\\\\src\\\\pages\\\\Recipies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Search from \"../components/Search\";\nimport RecipeList from \"../components/RecipeList\";\nimport { getRecipies } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recipies = () => {\n  _s();\n  const [searchedQuery, setSearchedQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    getSearchedResult();\n  }, [searchedQuery]);\n\n  //agr empty array likhnege to ek baar call hoga\n  //but baar search kr rhe hein uspe humko dekhna\n  //hein to searchedQuer pass krna hoga\n  const getSearchedResult = async () => {\n    let result = await getRecipies(searchedQuery);\n    if (result && result.recipes) {\n      setRecipes(result.recipes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      setSearchedQuery: setSearchedQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes,\n      searchedQuery: searchedQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Recipies, \"N2n34DqFNFVAXmUhrseUAvTvOu8=\");\n_c = Recipies;\nexport default Recipies;\nvar _c;\n$RefreshReg$(_c, \"Recipies\");","map":{"version":3,"names":["React","useEffect","useState","Search","RecipeList","getRecipies","jsxDEV","_jsxDEV","Fragment","_Fragment","Recipies","_s","searchedQuery","setSearchedQuery","recipes","setRecipes","getSearchedResult","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rohit/Desktop/RecipeProject/recipie-finder/src/pages/Recipies.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport RecipeList from \"../components/RecipeList\";\r\nimport { getRecipies } from \"../services/api\";\r\nconst Recipies = () => {\r\n  const [searchedQuery, setSearchedQuery] = useState(\"\");\r\n  const [recipes, setRecipes] = useState([]);\r\n  useEffect(() => {\r\n    getSearchedResult();\r\n  }, [searchedQuery]);\r\n\r\n  //agr empty array likhnege to ek baar call hoga\r\n  //but baar search kr rhe hein uspe humko dekhna\r\n  //hein to searchedQuer pass krna hoga\r\n  const getSearchedResult = async () => {\r\n    let result = await getRecipies(searchedQuery);\r\n    if (result && result.recipes) {\r\n      setRecipes(result.recipes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search setSearchedQuery={setSearchedQuery} />\r\n      <RecipeList recipes={recipes} searchedQuery={searchedQuery} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACde,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;;EAEnB;EACA;EACA;EACA,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIC,MAAM,GAAG,MAAMZ,WAAW,CAACO,aAAa,CAAC;IAC7C,IAAIK,MAAM,IAAIA,MAAM,CAACH,OAAO,EAAE;MAC5BC,UAAU,CAACE,MAAM,CAACH,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACJ,MAAM;MAACU,gBAAgB,EAAEA;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9Cf,OAAA,CAACH,UAAU;MAACU,OAAO,EAAEA,OAAQ;MAACF,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAC7D;AAEP,CAAC;AAACX,EAAA,CAvBID,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}